from rest_framework.generics import GenericAPIView
from rest_framework.response import Response

class ApartmentViewSet(GenericAPIView):
    queryset = Apartment.objects.all()
    serializer_class = ApartmentSerializer
    permission_classes = [IsOwner, IsAgent]
    filter_backends = [DjangoFilterBackend, OrderingFilter, SearchFilter]
    filterset_fields = ["location", "price", "category"]
    search_fields = ["location", "price", "category", "title"]
    ordering_fields = ["category"]

    def get(self, request):
        apartments = self.get_queryset()
        serializer = self.get_serializer(apartments, many=True)
        return Response(serializer.data)

    def post(self, request):
        serializer = CreateApartmentSerializer(data=request.data)
        if serializer.is_valid():
            serializer.save(agent=request.user)
            return Response(serializer.data, status=status.HTTP_201_CREATED)
        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)

    def put(self, request, pk):
        apartment = get_object_or_404(self.get_queryset(), pk=pk)
        self.check_object_permissions(request, apartment)
        serializer = CreateApartmentSerializer(apartment, data=request.data)
        if serializer.is_valid():
            serializer.save()
            return Response(serializer.data)
        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)

    def delete(self, request, pk):
        apartment = get_object_or_404(self.get_queryset(), pk=pk)
        self.check_object_permissions(request, apartment)
        apartment.delete()
        return Response(status=status.HTTP_204_NO_CONTENT)


class PicturesView(generics.ListCreateAPIView):
	"""
	Pictures of the apartment can be uploaded
	Args:
    The apartment_id

	"""
	http_method_names = ["get", "post", "put", "delete"]
	queryset = Picture.objects.all()
	permission_classes = [ IsAgent]
	serializer_class = PictureSerializer

	def get_queryset(self):
		if pk := self.kwargs.get("apartment_pk", ""):
			return Picture.objects.filter(apartment_id=pk)
		return super().get_queryset()

	def get_serializer_context(self):
		if pk := self.kwargs.get("apartment_pk", ""):
			return {"apartment_pk": pk, 'request':self.request}
		return super().get_serializer_context()
